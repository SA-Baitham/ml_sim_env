# Task options for `collect_data.py` script
num_episodes: 50 # Number of episodes to generate
dataset_dir_name: "dataset_dev_depth" # Path to save the dataset

# Regeneration of GT for real failure episodes options, used with `generate_gt.py` script
real_dataset_path: "/home/ahmed/Desktop/workspace/ml_sim_env/dataset_150_real" # Path to the real dataset
gt_dataset_dir_name: "dataset_failure_gt" # Path to save the ground truth dataset
num_gt_noise_poses: 4 # Number of perturbed ground truth poses to generate (including the original pose)
x_perturbation_range: 0.025 # x perturbation range for ground truth poses
y_perturbation_range: 0.025 # y perturbation range for ground truth poses
quat_perturbation_range: 0.5 # quat perturbation range for ground truth poses
failure_case_indices: [6] # Indices of the failure cases to regenerate ground truth poses
# failure_case_indices: [0, 3, 5, 6, 8, 9, 10, 11, 12, 13, 16, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29] # Indices of the failure cases to regenerate ground truth poses

# Common options

# Configuration file for randomization
make_mujoco_same_as_real: True # Make the simulation generated poses follow same frames as in real world
make_real_same_as_mujoco: False # Make the real world generated poses follow same frames as in simulation

# Vision randomization options
num_light_sources: 5 # Number of light sources to add for light_source randomization
depth: False # Use depth images

# Rendering options
render: False # Display simulation window
render_cam_pos: [-0.75, -0.5, 1] # Position of camera used for gifs
save_gifs: True # Save gifs of the simulation
save_failed_gifs: True # Save gifs of the simulation when the task fails
trajectory_cam: '' # Camera to use for trajectory path visualization, None to disable
show_used_ee_axis: False # Show the axis of the end effector used for the task
show_saved_ee_axis: False # Show the axis of the end effector saved in the dataset
show_bounding_box: True # Show the bounding box of in-distribution cube init pose training range

randomization_list: [
    # {'clean'}, 
    # Dynamic parameters
    # {"link_mass"}, 
    # {"joint_damping"}, 
    # {"joint_friction"}, 
    # {"actuator_gain"},
    # {"link_inertia"},
    # {"joint_stiffness"},
    # {'gravity'},
    
    # Vision parameters
    # {"light_source"},
    # {"object_color"},
    # {"robot_color"},
    # {"table_color"},
    # {"real_floor"},
    # {"normalize"},
    # {"HSV"},
    # {"salt_and_pepper"},
    {"real_cube"},
    # {"SAM"},

    # All
    # {"real_cube", "link_mass", "joint_damping", "joint_friction", "actuator_gain", "link_inertia", "joint_stiffness", "gravity", "light_source", "object_color", "robot_color", "table_color", "real_floor", "HSV", "salt_and_pepper"}
  ]

# random dynamics configs
random_dynamics:
  link_mass: # dynamic parameters
    body.base|inertial.mass: # part_type.part_name|property1.property2.etc
      - [-0.6, 0.6]  # Lower and upper bounds for random noise value (uniformly selected)
      - add  # Operation to apply: add or mul. add will add random noise to the original value, mul will multiply the original value by the random noise
    body.shoulder_link|inertial.mass:
      - [-0.6, 0.6]
      - add
    body.upper_arm_link|inertial.mass:
      - [-0.6, 0.6]
      - add
    body.forearm_link|inertial.mass:
      - [-0.6, 0.6]
      - add
    body.wrist_1_link|inertial.mass:
      - [-0.6, 0.6]
      - add
    body.wrist_2_link|inertial.mass:
      - [-0.6, 0.6]
      - add
    body.wrist_3_link|inertial.mass:
      - [-0.15, 0.15]
      - add

  joint_damping:
    joint.shoulder_pan_joint|damping:
      - [0, 2.99]
      - add
    joint.shoulder_lift_joint|damping:
      - [0, 2.99]
      - add
    joint.elbow_joint|damping:
      - [0, 2.99]
      - add
    joint.wrist_1_joint|damping:
      - [0, 2.99]
      - add
    joint.wrist_2_joint|damping:
      - [0, 2.99]
      - add
    joint.wrist_3_joint|damping:
      - [0, 2.99]
      - add

  joint_friction:
    joint.shoulder_pan_joint|frictionloss:
      - [0, 1]
      - add
    joint.shoulder_lift_joint|frictionloss:
      - [0, 1]
      - add
    joint.elbow_joint|frictionloss:
      - [0, 1]
      - add
    joint.wrist_1_joint|frictionloss:
      - [0, 1]
      - add
    joint.wrist_2_joint|frictionloss:
      - [0, 1]
      - add
    joint.wrist_3_joint|frictionloss:
      - [0, 1]
      - add

  actuator_gain:
    # actuator.shoulder_pan|gainprm:
    actuator.shoulder_pan|kp:
      - [0.5, 2]
      - mul
    # actuator.shoulder_lift|gainprm:
    actuator.shoulder_lift|kp:
      - [0.5, 2]
      - mul
    # actuator.elbow|gainprm:
    actuator.elbow|kp:
      - [0.5, 2]
      - mul
    # actuator.wrist_1|gainprm:
    actuator.wrist_1|kp:
      - [0.5, 2]
      - mul
    # actuator.wrist_2|gainprm:
    actuator.wrist_2|kp:
      - [0.5, 2]
      - mul
    # actuator.wrist_3|gainprm:
    actuator.wrist_3|kp:
      - [0.5, 2]
      - mul

  link_inertia:
    body.base|inertial.diaginertia:
      - [0.5, 1.5]
      - mul
    body.shoulder_link|inertial.diaginertia:
      - [0.5, 1.5]
      - mul
    body.upper_arm_link|inertial.diaginertia:
      - [0.5, 1.5]
      - mul
    body.forearm_link|inertial.diaginertia:
      - [0.5, 1.5]
      - mul
    body.wrist_1_link|inertial.diaginertia:
      - [0.5, 1.5]
      - mul
    body.wrist_2_link|inertial.diaginertia:
      - [0.5, 1.5]
      - mul
    body.wrist_3_link|inertial.diaginertia:
      - [0.5, 1.5]
      - mul

  joint_stiffness:
    joint.shoulder_pan_joint|stiffness:
      - [0, 0.01]
      - add
    joint.shoulder_lift_joint|stiffness:
      - [0, 0.01]
      - add
    joint.elbow_joint|stiffness:
      - [0, 0.01]
      - add
    joint.wrist_1_joint|stiffness:
      - [0, 0.01]
      - add
    joint.wrist_2_joint|stiffness:
      - [0, 0.01]
      - add
    joint.wrist_3_joint|stiffness:
      - [0, 0.01]
      - add

  gravity:
    gravity:
      - [-9.7, -10.1]
      - add

  # Vision parameters
  robot_color:
    material.black|rgba:
      - [[0.0, 0.0, 0.0, 1.0], [1.0, 1.0, 1.0, 1.0]]
      - set
    material.jointgray|rgba:
      - [[0.0, 0.0, 0.0, 1.0], [1.0, 1.0, 1.0, 1.0]]
      - set
    material.linkgray|rgba:
      - [[0.0, 0.0, 0.0, 1.0], [1.0, 1.0, 1.0, 1.0]]
      - set
    material.urblue|rgba:
      - [[0.0, 0.0, 0.0, 1.0], [1.0, 1.0, 1.0, 1.0]]
      - set